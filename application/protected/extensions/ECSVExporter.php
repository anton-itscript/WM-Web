<?phpclass ECSVExporter{	protected $delimiter=';';	protected $headers;	protected $data;		public function __construct($data,$delimiter=';')	{        $this->delimiter = $delimiter;        $this->data = $data;        $this->_setHeaders();        $this->_dataNormal();	}	public function createCSV($filename)    {		$fp = fopen($filename, 'w');		fputcsv($fp, $this->headers,$this->delimiter);		foreach ($this->data as $data) {			fputcsv($fp, $data,$this->delimiter);		}		fclose($fp);				}			protected function _getHeaders()    {		$header_array=array();		for($i=0;$i<count($this->data);$i++){			$header_array = array_merge($header_array,$this->data[$i]);					}		return array_keys($header_array);	}    public function getString()    {        $contents = '';        $contents .= implode($this->delimiter,$this->headers);        $contents .= "\r\n";        foreach ($this->data as $data) {            $contents .= implode($this->delimiter,$data);            $contents .= "\r\n";        }        return $contents;    }	protected function _setHeaders()    {		$this->headers = $this->_getHeaders();	}		protected function _dataNormal()    {        $dataNormal =array();		$array_keys = array_flip($this->headers);		foreach($array_keys as $key => $value){					$array_keys[$key] = '';		}		for($i=0;$i<count($this->data);$i++){				$item  = $this->data[$i];			foreach ($array_keys as $key => $value) {                $dataNormal[$i][$key] = $array_keys[$key];                if (isset($item[$key])) {                    $dataNormal[$i][$key] = $item[$key];                }            }		}		$this->data = $dataNormal;	}		}	?>